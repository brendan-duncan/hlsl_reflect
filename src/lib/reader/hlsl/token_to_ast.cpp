#pragma once
// Generated by tools/gen_token_type.py
#include "token_to_ast.h"

#include <map>

namespace hlsl {

static const std::map<TokenType, ast::BaseType> _tokenTypeToBaseType{
  {TokenType::Undefined, ast::BaseType::Undefined},
  {TokenType::Void, ast::BaseType::Void},
  {TokenType::Float, ast::BaseType::Float},
  {TokenType::Half, ast::BaseType::Half},
  {TokenType::Int, ast::BaseType::Int},
  {TokenType::Uint, ast::BaseType::Uint},
  {TokenType::Bool, ast::BaseType::Bool},
  {TokenType::Min10float, ast::BaseType::Min10float},
  {TokenType::Min16float, ast::BaseType::Min16float},
  {TokenType::Min12int, ast::BaseType::Min12int},
  {TokenType::Min16int, ast::BaseType::Min16int},
  {TokenType::Min16uint, ast::BaseType::Min16uint},
  {TokenType::Vector, ast::BaseType::Vector},
  {TokenType::Matrix, ast::BaseType::Matrix},
  {TokenType::RWBuffer, ast::BaseType::RWBuffer},
  {TokenType::RWByteAddressBuffer, ast::BaseType::RWByteAddressBuffer},
  {TokenType::RWStructuredBuffer, ast::BaseType::RWStructuredBuffer},
  {TokenType::RWTexture1D, ast::BaseType::RWTexture1D},
  {TokenType::RWTexture1DArray, ast::BaseType::RWTexture1DArray},
  {TokenType::RWTexture2D, ast::BaseType::RWTexture2D},
  {TokenType::RWTexture2DArray, ast::BaseType::RWTexture2DArray},
  {TokenType::RWTexture3D, ast::BaseType::RWTexture3D},
  {TokenType::Texture, ast::BaseType::Texture},
  {TokenType::Texture1D, ast::BaseType::Texture1D},
  {TokenType::Texture1D_float, ast::BaseType::Texture1D_float},
  {TokenType::Texture1DArray, ast::BaseType::Texture1DArray},
  {TokenType::Texture2D, ast::BaseType::Texture2D},
  {TokenType::Texture2D_float, ast::BaseType::Texture2D_float},
  {TokenType::Texture2DArray, ast::BaseType::Texture2DArray},
  {TokenType::Texture2DMS, ast::BaseType::Texture2DMS},
  {TokenType::Texture2DMS_float, ast::BaseType::Texture2DMS_float},
  {TokenType::Texture2DMSArray, ast::BaseType::Texture2DMSArray},
  {TokenType::Texture3D, ast::BaseType::Texture3D},
  {TokenType::Texture3D_float, ast::BaseType::Texture3D_float},
  {TokenType::TextureCube, ast::BaseType::TextureCube},
  {TokenType::TextureCube_float, ast::BaseType::TextureCube_float},
  {TokenType::TextureCubeArray, ast::BaseType::TextureCubeArray},
  {TokenType::Sampler, ast::BaseType::Sampler},
  {TokenType::SamplerCUBE, ast::BaseType::SamplerCUBE},
  {TokenType::SamplerCUBE_float, ast::BaseType::SamplerCUBE_float},
  {TokenType::Sampler2D, ast::BaseType::Sampler2D},
  {TokenType::Sampler2D_float, ast::BaseType::Sampler2D_float},
  {TokenType::SamplerState, ast::BaseType::SamplerState},
  {TokenType::SamplerComparisonState, ast::BaseType::SamplerComparisonState},
  {TokenType::Struct, ast::BaseType::Struct},
  {TokenType::StructuredBuffer, ast::BaseType::StructuredBuffer},
  {TokenType::Expression, ast::BaseType::Expression},
  {TokenType::UserDefined, ast::BaseType::UserDefined},
  {TokenType::Float1, ast::BaseType::Float1},
  {TokenType::Float1x1, ast::BaseType::Float1x1},
  {TokenType::Float1x2, ast::BaseType::Float1x2},
  {TokenType::Float1x3, ast::BaseType::Float1x3},
  {TokenType::Float1x4, ast::BaseType::Float1x4},
  {TokenType::Float2, ast::BaseType::Float2},
  {TokenType::Float2x1, ast::BaseType::Float2x1},
  {TokenType::Float2x2, ast::BaseType::Float2x2},
  {TokenType::Float2x3, ast::BaseType::Float2x3},
  {TokenType::Float2x4, ast::BaseType::Float2x4},
  {TokenType::Float3, ast::BaseType::Float3},
  {TokenType::Float3x1, ast::BaseType::Float3x1},
  {TokenType::Float3x2, ast::BaseType::Float3x2},
  {TokenType::Float3x3, ast::BaseType::Float3x3},
  {TokenType::Float3x4, ast::BaseType::Float3x4},
  {TokenType::Float4, ast::BaseType::Float4},
  {TokenType::Float4x1, ast::BaseType::Float4x1},
  {TokenType::Float4x2, ast::BaseType::Float4x2},
  {TokenType::Float4x3, ast::BaseType::Float4x3},
  {TokenType::Float4x4, ast::BaseType::Float4x4},
  {TokenType::Half1, ast::BaseType::Half1},
  {TokenType::Half1x1, ast::BaseType::Half1x1},
  {TokenType::Half1x2, ast::BaseType::Half1x2},
  {TokenType::Half1x3, ast::BaseType::Half1x3},
  {TokenType::Half1x4, ast::BaseType::Half1x4},
  {TokenType::Half2, ast::BaseType::Half2},
  {TokenType::Half2x1, ast::BaseType::Half2x1},
  {TokenType::Half2x2, ast::BaseType::Half2x2},
  {TokenType::Half2x3, ast::BaseType::Half2x3},
  {TokenType::Half2x4, ast::BaseType::Half2x4},
  {TokenType::Half3, ast::BaseType::Half3},
  {TokenType::Half3x1, ast::BaseType::Half3x1},
  {TokenType::Half3x2, ast::BaseType::Half3x2},
  {TokenType::Half3x3, ast::BaseType::Half3x3},
  {TokenType::Half3x4, ast::BaseType::Half3x4},
  {TokenType::Half4, ast::BaseType::Half4},
  {TokenType::Half4x1, ast::BaseType::Half4x1},
  {TokenType::Half4x2, ast::BaseType::Half4x2},
  {TokenType::Half4x3, ast::BaseType::Half4x3},
  {TokenType::Half4x4, ast::BaseType::Half4x4},
  {TokenType::Int1, ast::BaseType::Int1},
  {TokenType::Int1x1, ast::BaseType::Int1x1},
  {TokenType::Int1x2, ast::BaseType::Int1x2},
  {TokenType::Int1x3, ast::BaseType::Int1x3},
  {TokenType::Int1x4, ast::BaseType::Int1x4},
  {TokenType::Int2, ast::BaseType::Int2},
  {TokenType::Int2x1, ast::BaseType::Int2x1},
  {TokenType::Int2x2, ast::BaseType::Int2x2},
  {TokenType::Int2x3, ast::BaseType::Int2x3},
  {TokenType::Int2x4, ast::BaseType::Int2x4},
  {TokenType::Int3, ast::BaseType::Int3},
  {TokenType::Int3x1, ast::BaseType::Int3x1},
  {TokenType::Int3x2, ast::BaseType::Int3x2},
  {TokenType::Int3x3, ast::BaseType::Int3x3},
  {TokenType::Int3x4, ast::BaseType::Int3x4},
  {TokenType::Int4, ast::BaseType::Int4},
  {TokenType::Int4x1, ast::BaseType::Int4x1},
  {TokenType::Int4x2, ast::BaseType::Int4x2},
  {TokenType::Int4x3, ast::BaseType::Int4x3},
  {TokenType::Int4x4, ast::BaseType::Int4x4},
  {TokenType::Uint1, ast::BaseType::Uint1},
  {TokenType::Uint1x1, ast::BaseType::Uint1x1},
  {TokenType::Uint1x2, ast::BaseType::Uint1x2},
  {TokenType::Uint1x3, ast::BaseType::Uint1x3},
  {TokenType::Uint1x4, ast::BaseType::Uint1x4},
  {TokenType::Uint2, ast::BaseType::Uint2},
  {TokenType::Uint2x1, ast::BaseType::Uint2x1},
  {TokenType::Uint2x2, ast::BaseType::Uint2x2},
  {TokenType::Uint2x3, ast::BaseType::Uint2x3},
  {TokenType::Uint2x4, ast::BaseType::Uint2x4},
  {TokenType::Uint3, ast::BaseType::Uint3},
  {TokenType::Uint3x1, ast::BaseType::Uint3x1},
  {TokenType::Uint3x2, ast::BaseType::Uint3x2},
  {TokenType::Uint3x3, ast::BaseType::Uint3x3},
  {TokenType::Uint3x4, ast::BaseType::Uint3x4},
  {TokenType::Uint4, ast::BaseType::Uint4},
  {TokenType::Uint4x1, ast::BaseType::Uint4x1},
  {TokenType::Uint4x2, ast::BaseType::Uint4x2},
  {TokenType::Uint4x3, ast::BaseType::Uint4x3},
  {TokenType::Uint4x4, ast::BaseType::Uint4x4},
  {TokenType::Bool1, ast::BaseType::Bool1},
  {TokenType::Bool1x1, ast::BaseType::Bool1x1},
  {TokenType::Bool1x2, ast::BaseType::Bool1x2},
  {TokenType::Bool1x3, ast::BaseType::Bool1x3},
  {TokenType::Bool1x4, ast::BaseType::Bool1x4},
  {TokenType::Bool2, ast::BaseType::Bool2},
  {TokenType::Bool2x1, ast::BaseType::Bool2x1},
  {TokenType::Bool2x2, ast::BaseType::Bool2x2},
  {TokenType::Bool2x3, ast::BaseType::Bool2x3},
  {TokenType::Bool2x4, ast::BaseType::Bool2x4},
  {TokenType::Bool3, ast::BaseType::Bool3},
  {TokenType::Bool3x1, ast::BaseType::Bool3x1},
  {TokenType::Bool3x2, ast::BaseType::Bool3x2},
  {TokenType::Bool3x3, ast::BaseType::Bool3x3},
  {TokenType::Bool3x4, ast::BaseType::Bool3x4},
  {TokenType::Bool4, ast::BaseType::Bool4},
  {TokenType::Bool4x1, ast::BaseType::Bool4x1},
  {TokenType::Bool4x2, ast::BaseType::Bool4x2},
  {TokenType::Bool4x3, ast::BaseType::Bool4x3},
  {TokenType::Bool4x4, ast::BaseType::Bool4x4},
  {TokenType::Min10float1, ast::BaseType::Min10float1},
  {TokenType::Min10float1x1, ast::BaseType::Min10float1x1},
  {TokenType::Min10float1x2, ast::BaseType::Min10float1x2},
  {TokenType::Min10float1x3, ast::BaseType::Min10float1x3},
  {TokenType::Min10float1x4, ast::BaseType::Min10float1x4},
  {TokenType::Min10float2, ast::BaseType::Min10float2},
  {TokenType::Min10float2x1, ast::BaseType::Min10float2x1},
  {TokenType::Min10float2x2, ast::BaseType::Min10float2x2},
  {TokenType::Min10float2x3, ast::BaseType::Min10float2x3},
  {TokenType::Min10float2x4, ast::BaseType::Min10float2x4},
  {TokenType::Min10float3, ast::BaseType::Min10float3},
  {TokenType::Min10float3x1, ast::BaseType::Min10float3x1},
  {TokenType::Min10float3x2, ast::BaseType::Min10float3x2},
  {TokenType::Min10float3x3, ast::BaseType::Min10float3x3},
  {TokenType::Min10float3x4, ast::BaseType::Min10float3x4},
  {TokenType::Min10float4, ast::BaseType::Min10float4},
  {TokenType::Min10float4x1, ast::BaseType::Min10float4x1},
  {TokenType::Min10float4x2, ast::BaseType::Min10float4x2},
  {TokenType::Min10float4x3, ast::BaseType::Min10float4x3},
  {TokenType::Min10float4x4, ast::BaseType::Min10float4x4},
  {TokenType::Min16float1, ast::BaseType::Min16float1},
  {TokenType::Min16float1x1, ast::BaseType::Min16float1x1},
  {TokenType::Min16float1x2, ast::BaseType::Min16float1x2},
  {TokenType::Min16float1x3, ast::BaseType::Min16float1x3},
  {TokenType::Min16float1x4, ast::BaseType::Min16float1x4},
  {TokenType::Min16float2, ast::BaseType::Min16float2},
  {TokenType::Min16float2x1, ast::BaseType::Min16float2x1},
  {TokenType::Min16float2x2, ast::BaseType::Min16float2x2},
  {TokenType::Min16float2x3, ast::BaseType::Min16float2x3},
  {TokenType::Min16float2x4, ast::BaseType::Min16float2x4},
  {TokenType::Min16float3, ast::BaseType::Min16float3},
  {TokenType::Min16float3x1, ast::BaseType::Min16float3x1},
  {TokenType::Min16float3x2, ast::BaseType::Min16float3x2},
  {TokenType::Min16float3x3, ast::BaseType::Min16float3x3},
  {TokenType::Min16float3x4, ast::BaseType::Min16float3x4},
  {TokenType::Min16float4, ast::BaseType::Min16float4},
  {TokenType::Min16float4x1, ast::BaseType::Min16float4x1},
  {TokenType::Min16float4x2, ast::BaseType::Min16float4x2},
  {TokenType::Min16float4x3, ast::BaseType::Min16float4x3},
  {TokenType::Min16float4x4, ast::BaseType::Min16float4x4},
  {TokenType::Min12int1, ast::BaseType::Min12int1},
  {TokenType::Min12int1x1, ast::BaseType::Min12int1x1},
  {TokenType::Min12int1x2, ast::BaseType::Min12int1x2},
  {TokenType::Min12int1x3, ast::BaseType::Min12int1x3},
  {TokenType::Min12int1x4, ast::BaseType::Min12int1x4},
  {TokenType::Min12int2, ast::BaseType::Min12int2},
  {TokenType::Min12int2x1, ast::BaseType::Min12int2x1},
  {TokenType::Min12int2x2, ast::BaseType::Min12int2x2},
  {TokenType::Min12int2x3, ast::BaseType::Min12int2x3},
  {TokenType::Min12int2x4, ast::BaseType::Min12int2x4},
  {TokenType::Min12int3, ast::BaseType::Min12int3},
  {TokenType::Min12int3x1, ast::BaseType::Min12int3x1},
  {TokenType::Min12int3x2, ast::BaseType::Min12int3x2},
  {TokenType::Min12int3x3, ast::BaseType::Min12int3x3},
  {TokenType::Min12int3x4, ast::BaseType::Min12int3x4},
  {TokenType::Min12int4, ast::BaseType::Min12int4},
  {TokenType::Min12int4x1, ast::BaseType::Min12int4x1},
  {TokenType::Min12int4x2, ast::BaseType::Min12int4x2},
  {TokenType::Min12int4x3, ast::BaseType::Min12int4x3},
  {TokenType::Min12int4x4, ast::BaseType::Min12int4x4},
  {TokenType::Min16int1, ast::BaseType::Min16int1},
  {TokenType::Min16int1x1, ast::BaseType::Min16int1x1},
  {TokenType::Min16int1x2, ast::BaseType::Min16int1x2},
  {TokenType::Min16int1x3, ast::BaseType::Min16int1x3},
  {TokenType::Min16int1x4, ast::BaseType::Min16int1x4},
  {TokenType::Min16int2, ast::BaseType::Min16int2},
  {TokenType::Min16int2x1, ast::BaseType::Min16int2x1},
  {TokenType::Min16int2x2, ast::BaseType::Min16int2x2},
  {TokenType::Min16int2x3, ast::BaseType::Min16int2x3},
  {TokenType::Min16int2x4, ast::BaseType::Min16int2x4},
  {TokenType::Min16int3, ast::BaseType::Min16int3},
  {TokenType::Min16int3x1, ast::BaseType::Min16int3x1},
  {TokenType::Min16int3x2, ast::BaseType::Min16int3x2},
  {TokenType::Min16int3x3, ast::BaseType::Min16int3x3},
  {TokenType::Min16int3x4, ast::BaseType::Min16int3x4},
  {TokenType::Min16int4, ast::BaseType::Min16int4},
  {TokenType::Min16int4x1, ast::BaseType::Min16int4x1},
  {TokenType::Min16int4x2, ast::BaseType::Min16int4x2},
  {TokenType::Min16int4x3, ast::BaseType::Min16int4x3},
  {TokenType::Min16int4x4, ast::BaseType::Min16int4x4},
  {TokenType::Min16uint1, ast::BaseType::Min16uint1},
  {TokenType::Min16uint1x1, ast::BaseType::Min16uint1x1},
  {TokenType::Min16uint1x2, ast::BaseType::Min16uint1x2},
  {TokenType::Min16uint1x3, ast::BaseType::Min16uint1x3},
  {TokenType::Min16uint1x4, ast::BaseType::Min16uint1x4},
  {TokenType::Min16uint2, ast::BaseType::Min16uint2},
  {TokenType::Min16uint2x1, ast::BaseType::Min16uint2x1},
  {TokenType::Min16uint2x2, ast::BaseType::Min16uint2x2},
  {TokenType::Min16uint2x3, ast::BaseType::Min16uint2x3},
  {TokenType::Min16uint2x4, ast::BaseType::Min16uint2x4},
  {TokenType::Min16uint3, ast::BaseType::Min16uint3},
  {TokenType::Min16uint3x1, ast::BaseType::Min16uint3x1},
  {TokenType::Min16uint3x2, ast::BaseType::Min16uint3x2},
  {TokenType::Min16uint3x3, ast::BaseType::Min16uint3x3},
  {TokenType::Min16uint3x4, ast::BaseType::Min16uint3x4},
  {TokenType::Min16uint4, ast::BaseType::Min16uint4},
  {TokenType::Min16uint4x1, ast::BaseType::Min16uint4x1},
  {TokenType::Min16uint4x2, ast::BaseType::Min16uint4x2},
  {TokenType::Min16uint4x3, ast::BaseType::Min16uint4x3},
  {TokenType::Min16uint4x4, ast::BaseType::Min16uint4x4},
};

ast::BaseType tokenTypeToBaseType(TokenType t) {
  auto ti = _tokenTypeToBaseType.find(t);
  if (ti == _tokenTypeToBaseType.end()) {
    return ast::BaseType::Undefined;
  }
  return (*ti).second;
}

} // namespace hlsl
