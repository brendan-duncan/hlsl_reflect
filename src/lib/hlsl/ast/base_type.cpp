#pragma once

#include <map>

#include "../token_type.h"
#include "base_type.h"

namespace hlsl {

static const std::map<TokenType, BaseType> _tokenTypeToBaseType{
  {TokenType::Undefined, BaseType::Undefined},
  {TokenType::Void, BaseType::Void},
  {TokenType::Float, BaseType::Float},
  {TokenType::Int, BaseType::Int},
  {TokenType::Uint, BaseType::Uint},
  {TokenType::Bool, BaseType::Bool},
  {TokenType::Min10float, BaseType::Min10float},
  {TokenType::Min16float, BaseType::Min16float},
  {TokenType::Min12int, BaseType::Min12int},
  {TokenType::Min16int, BaseType::Min16int},
  {TokenType::Min16uint, BaseType::Min16uint},
  {TokenType::Vector, BaseType::Vector},
  {TokenType::Matrix, BaseType::Matrix},
  {TokenType::RWBuffer, BaseType::RWBuffer},
  {TokenType::RWByteAddressBuffer, BaseType::RWByteAddressBuffer},
  {TokenType::RWStructuredBuffer, BaseType::RWStructuredBuffer},
  {TokenType::RWTexture1D, BaseType::RWTexture1D},
  {TokenType::RWTexture1DArray, BaseType::RWTexture1DArray},
  {TokenType::RWTexture2D, BaseType::RWTexture2D},
  {TokenType::RWTexture2DArray, BaseType::RWTexture2DArray},
  {TokenType::RWTexture3D, BaseType::RWTexture3D},
  {TokenType::Texture, BaseType::Texture},
  {TokenType::Texture1D, BaseType::Texture1D},
  {TokenType::Texture1DArray, BaseType::Texture1DArray},
  {TokenType::Texture2D, BaseType::Texture2D},
  {TokenType::Texture2DArray, BaseType::Texture2DArray},
  {TokenType::Texture2DMS, BaseType::Texture2DMS},
  {TokenType::Texture2DMSArray, BaseType::Texture2DMSArray},
  {TokenType::Texture3D, BaseType::Texture3D},
  {TokenType::TextureCube, BaseType::TextureCube},
  {TokenType::TextureCubeArray, BaseType::TextureCubeArray},
  {TokenType::Sampler, BaseType::Sampler},
  {TokenType::SamplerState, BaseType::SamplerState},
  {TokenType::SamplerComparisonState, BaseType::SamplerComparisonState},
  {TokenType::Struct, BaseType::Struct},
  {TokenType::Expression, BaseType::Expression},
  {TokenType::Float1, BaseType::Float1},
  {TokenType::Float1x1, BaseType::Float1x1},
  {TokenType::Float1x2, BaseType::Float1x2},
  {TokenType::Float1x3, BaseType::Float1x3},
  {TokenType::Float1x4, BaseType::Float1x4},
  {TokenType::Float2, BaseType::Float2},
  {TokenType::Float2x1, BaseType::Float2x1},
  {TokenType::Float2x2, BaseType::Float2x2},
  {TokenType::Float2x3, BaseType::Float2x3},
  {TokenType::Float2x4, BaseType::Float2x4},
  {TokenType::Float3, BaseType::Float3},
  {TokenType::Float3x1, BaseType::Float3x1},
  {TokenType::Float3x2, BaseType::Float3x2},
  {TokenType::Float3x3, BaseType::Float3x3},
  {TokenType::Float3x4, BaseType::Float3x4},
  {TokenType::Float4, BaseType::Float4},
  {TokenType::Float4x1, BaseType::Float4x1},
  {TokenType::Float4x2, BaseType::Float4x2},
  {TokenType::Float4x3, BaseType::Float4x3},
  {TokenType::Float4x4, BaseType::Float4x4},
  {TokenType::Int1, BaseType::Int1},
  {TokenType::Int1x1, BaseType::Int1x1},
  {TokenType::Int1x2, BaseType::Int1x2},
  {TokenType::Int1x3, BaseType::Int1x3},
  {TokenType::Int1x4, BaseType::Int1x4},
  {TokenType::Int2, BaseType::Int2},
  {TokenType::Int2x1, BaseType::Int2x1},
  {TokenType::Int2x2, BaseType::Int2x2},
  {TokenType::Int2x3, BaseType::Int2x3},
  {TokenType::Int2x4, BaseType::Int2x4},
  {TokenType::Int3, BaseType::Int3},
  {TokenType::Int3x1, BaseType::Int3x1},
  {TokenType::Int3x2, BaseType::Int3x2},
  {TokenType::Int3x3, BaseType::Int3x3},
  {TokenType::Int3x4, BaseType::Int3x4},
  {TokenType::Int4, BaseType::Int4},
  {TokenType::Int4x1, BaseType::Int4x1},
  {TokenType::Int4x2, BaseType::Int4x2},
  {TokenType::Int4x3, BaseType::Int4x3},
  {TokenType::Int4x4, BaseType::Int4x4},
  {TokenType::Uint1, BaseType::Uint1},
  {TokenType::Uint1x1, BaseType::Uint1x1},
  {TokenType::Uint1x2, BaseType::Uint1x2},
  {TokenType::Uint1x3, BaseType::Uint1x3},
  {TokenType::Uint1x4, BaseType::Uint1x4},
  {TokenType::Uint2, BaseType::Uint2},
  {TokenType::Uint2x1, BaseType::Uint2x1},
  {TokenType::Uint2x2, BaseType::Uint2x2},
  {TokenType::Uint2x3, BaseType::Uint2x3},
  {TokenType::Uint2x4, BaseType::Uint2x4},
  {TokenType::Uint3, BaseType::Uint3},
  {TokenType::Uint3x1, BaseType::Uint3x1},
  {TokenType::Uint3x2, BaseType::Uint3x2},
  {TokenType::Uint3x3, BaseType::Uint3x3},
  {TokenType::Uint3x4, BaseType::Uint3x4},
  {TokenType::Uint4, BaseType::Uint4},
  {TokenType::Uint4x1, BaseType::Uint4x1},
  {TokenType::Uint4x2, BaseType::Uint4x2},
  {TokenType::Uint4x3, BaseType::Uint4x3},
  {TokenType::Uint4x4, BaseType::Uint4x4},
  {TokenType::Bool1, BaseType::Bool1},
  {TokenType::Bool1x1, BaseType::Bool1x1},
  {TokenType::Bool1x2, BaseType::Bool1x2},
  {TokenType::Bool1x3, BaseType::Bool1x3},
  {TokenType::Bool1x4, BaseType::Bool1x4},
  {TokenType::Bool2, BaseType::Bool2},
  {TokenType::Bool2x1, BaseType::Bool2x1},
  {TokenType::Bool2x2, BaseType::Bool2x2},
  {TokenType::Bool2x3, BaseType::Bool2x3},
  {TokenType::Bool2x4, BaseType::Bool2x4},
  {TokenType::Bool3, BaseType::Bool3},
  {TokenType::Bool3x1, BaseType::Bool3x1},
  {TokenType::Bool3x2, BaseType::Bool3x2},
  {TokenType::Bool3x3, BaseType::Bool3x3},
  {TokenType::Bool3x4, BaseType::Bool3x4},
  {TokenType::Bool4, BaseType::Bool4},
  {TokenType::Bool4x1, BaseType::Bool4x1},
  {TokenType::Bool4x2, BaseType::Bool4x2},
  {TokenType::Bool4x3, BaseType::Bool4x3},
  {TokenType::Bool4x4, BaseType::Bool4x4},
  {TokenType::Min10float1, BaseType::Min10float1},
  {TokenType::Min10float1x1, BaseType::Min10float1x1},
  {TokenType::Min10float1x2, BaseType::Min10float1x2},
  {TokenType::Min10float1x3, BaseType::Min10float1x3},
  {TokenType::Min10float1x4, BaseType::Min10float1x4},
  {TokenType::Min10float2, BaseType::Min10float2},
  {TokenType::Min10float2x1, BaseType::Min10float2x1},
  {TokenType::Min10float2x2, BaseType::Min10float2x2},
  {TokenType::Min10float2x3, BaseType::Min10float2x3},
  {TokenType::Min10float2x4, BaseType::Min10float2x4},
  {TokenType::Min10float3, BaseType::Min10float3},
  {TokenType::Min10float3x1, BaseType::Min10float3x1},
  {TokenType::Min10float3x2, BaseType::Min10float3x2},
  {TokenType::Min10float3x3, BaseType::Min10float3x3},
  {TokenType::Min10float3x4, BaseType::Min10float3x4},
  {TokenType::Min10float4, BaseType::Min10float4},
  {TokenType::Min10float4x1, BaseType::Min10float4x1},
  {TokenType::Min10float4x2, BaseType::Min10float4x2},
  {TokenType::Min10float4x3, BaseType::Min10float4x3},
  {TokenType::Min10float4x4, BaseType::Min10float4x4},
  {TokenType::Min16float1, BaseType::Min16float1},
  {TokenType::Min16float1x1, BaseType::Min16float1x1},
  {TokenType::Min16float1x2, BaseType::Min16float1x2},
  {TokenType::Min16float1x3, BaseType::Min16float1x3},
  {TokenType::Min16float1x4, BaseType::Min16float1x4},
  {TokenType::Min16float2, BaseType::Min16float2},
  {TokenType::Min16float2x1, BaseType::Min16float2x1},
  {TokenType::Min16float2x2, BaseType::Min16float2x2},
  {TokenType::Min16float2x3, BaseType::Min16float2x3},
  {TokenType::Min16float2x4, BaseType::Min16float2x4},
  {TokenType::Min16float3, BaseType::Min16float3},
  {TokenType::Min16float3x1, BaseType::Min16float3x1},
  {TokenType::Min16float3x2, BaseType::Min16float3x2},
  {TokenType::Min16float3x3, BaseType::Min16float3x3},
  {TokenType::Min16float3x4, BaseType::Min16float3x4},
  {TokenType::Min16float4, BaseType::Min16float4},
  {TokenType::Min16float4x1, BaseType::Min16float4x1},
  {TokenType::Min16float4x2, BaseType::Min16float4x2},
  {TokenType::Min16float4x3, BaseType::Min16float4x3},
  {TokenType::Min16float4x4, BaseType::Min16float4x4},
  {TokenType::Min12int1, BaseType::Min12int1},
  {TokenType::Min12int1x1, BaseType::Min12int1x1},
  {TokenType::Min12int1x2, BaseType::Min12int1x2},
  {TokenType::Min12int1x3, BaseType::Min12int1x3},
  {TokenType::Min12int1x4, BaseType::Min12int1x4},
  {TokenType::Min12int2, BaseType::Min12int2},
  {TokenType::Min12int2x1, BaseType::Min12int2x1},
  {TokenType::Min12int2x2, BaseType::Min12int2x2},
  {TokenType::Min12int2x3, BaseType::Min12int2x3},
  {TokenType::Min12int2x4, BaseType::Min12int2x4},
  {TokenType::Min12int3, BaseType::Min12int3},
  {TokenType::Min12int3x1, BaseType::Min12int3x1},
  {TokenType::Min12int3x2, BaseType::Min12int3x2},
  {TokenType::Min12int3x3, BaseType::Min12int3x3},
  {TokenType::Min12int3x4, BaseType::Min12int3x4},
  {TokenType::Min12int4, BaseType::Min12int4},
  {TokenType::Min12int4x1, BaseType::Min12int4x1},
  {TokenType::Min12int4x2, BaseType::Min12int4x2},
  {TokenType::Min12int4x3, BaseType::Min12int4x3},
  {TokenType::Min12int4x4, BaseType::Min12int4x4},
  {TokenType::Min16int1, BaseType::Min16int1},
  {TokenType::Min16int1x1, BaseType::Min16int1x1},
  {TokenType::Min16int1x2, BaseType::Min16int1x2},
  {TokenType::Min16int1x3, BaseType::Min16int1x3},
  {TokenType::Min16int1x4, BaseType::Min16int1x4},
  {TokenType::Min16int2, BaseType::Min16int2},
  {TokenType::Min16int2x1, BaseType::Min16int2x1},
  {TokenType::Min16int2x2, BaseType::Min16int2x2},
  {TokenType::Min16int2x3, BaseType::Min16int2x3},
  {TokenType::Min16int2x4, BaseType::Min16int2x4},
  {TokenType::Min16int3, BaseType::Min16int3},
  {TokenType::Min16int3x1, BaseType::Min16int3x1},
  {TokenType::Min16int3x2, BaseType::Min16int3x2},
  {TokenType::Min16int3x3, BaseType::Min16int3x3},
  {TokenType::Min16int3x4, BaseType::Min16int3x4},
  {TokenType::Min16int4, BaseType::Min16int4},
  {TokenType::Min16int4x1, BaseType::Min16int4x1},
  {TokenType::Min16int4x2, BaseType::Min16int4x2},
  {TokenType::Min16int4x3, BaseType::Min16int4x3},
  {TokenType::Min16int4x4, BaseType::Min16int4x4},
  {TokenType::Min16uint1, BaseType::Min16uint1},
  {TokenType::Min16uint1x1, BaseType::Min16uint1x1},
  {TokenType::Min16uint1x2, BaseType::Min16uint1x2},
  {TokenType::Min16uint1x3, BaseType::Min16uint1x3},
  {TokenType::Min16uint1x4, BaseType::Min16uint1x4},
  {TokenType::Min16uint2, BaseType::Min16uint2},
  {TokenType::Min16uint2x1, BaseType::Min16uint2x1},
  {TokenType::Min16uint2x2, BaseType::Min16uint2x2},
  {TokenType::Min16uint2x3, BaseType::Min16uint2x3},
  {TokenType::Min16uint2x4, BaseType::Min16uint2x4},
  {TokenType::Min16uint3, BaseType::Min16uint3},
  {TokenType::Min16uint3x1, BaseType::Min16uint3x1},
  {TokenType::Min16uint3x2, BaseType::Min16uint3x2},
  {TokenType::Min16uint3x3, BaseType::Min16uint3x3},
  {TokenType::Min16uint3x4, BaseType::Min16uint3x4},
  {TokenType::Min16uint4, BaseType::Min16uint4},
  {TokenType::Min16uint4x1, BaseType::Min16uint4x1},
  {TokenType::Min16uint4x2, BaseType::Min16uint4x2},
  {TokenType::Min16uint4x3, BaseType::Min16uint4x3},
  {TokenType::Min16uint4x4, BaseType::Min16uint4x4},
};

BaseType tokenTypeToBaseType(TokenType t) {
  auto ti = _tokenTypeToBaseType.find(t);
  if (ti == _tokenTypeToBaseType.end()) {
    return BaseType::Undefined;
  }
  return (*ti).second;
}

} // namespace hlsl
